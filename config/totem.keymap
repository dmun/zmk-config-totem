//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3
#define TVP1 4
#define TVP2 5

&lt { flavor = "hold-preferred"; };

/ {
    combos { compatible = "zmk,combos"; };

    behaviors {
        mt_caps: mt_caps {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_CAPS";
            bindings = <&kp>, <&caps_word>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        base_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "BASE";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃     Q     ┃     W     ┃     F     ┃     P     ┃     B     ┃   ┃     J     ┃     L     ┃     U     ┃     Y     ┃     ;     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃     A     ┃     R     ┃     S     ┃     T     ┃     G     ┃   ┃     M     ┃     N     ┃     E     ┃     I     ┃     O     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃   CTRL    ┃     Z     ┃     X     ┃     C     ┃     D     ┃     V     ┃   ┃     K     ┃     H     ┃     ,     ┃     .     ┃     /     ┃    NUM    ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃    ALT    ┃    SPC    ┃    NAV    ┃   ┃    SYM    ┃   BSPC    ┃    MOD    ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
                         &kp Q  &kp W  &kp F     &kp P      &kp B          &kp J        &kp L                     &kp U                   &kp Y    &kp SEMI
                         &kp A  &kp R  &kp S     &kp T      &kp G          &kp M        &kp N                     &kp E                   &kp I    &kp O
&mt LEFT_CONTROL ESCAPE  &kp Z  &kp X  &kp C     &kp D      &kp V          &kp K        &kp H                     &kp COMMA               &kp DOT  &kp FSLH  &lt 3 SINGLE_QUOTE
                                       &kp LALT  &kp SPACE  &lt 1 ENTER    &lt 2 ENTER  &mt LEFT_SHIFT BACKSPACE  &mt LGUI LG(BACKSPACE)
            >;
        };

        nav_layer {
            bindings = <
        &trans  &trans   &kp LA(TAB)      &trans       &trans    &trans    &kp LC(D)  &kp LC(U)   &trans     &trans
        &trans  &kp TAB  &kp LC(LS(TAB))  &kp LC(TAB)  &trans    &kp LEFT  &kp DOWN   &kp UP      &kp RIGHT  &trans
&trans  &trans  &trans   &trans           &trans       &trans    &trans    &kp CARET  &kp DOLLAR  &trans     &trans  &trans
                         &trans           &trans       &trans    &trans    &trans     &trans
            >;
        };

        sym_layer {
            bindings = <
        &kp AT    &kp LS(LESS_THAN)  &kp LS(GT)  &kp BSLH          &kp GRAVE    &kp LS(AMPS)   &kp LS(UNDER)          &kp LBKT      &kp RBKT      &kp SEMI
        &kp EXCL  &kp MINUS          &kp PLUS    &kp EQUAL         &kp HASH     &kp LS(PIPE)   &kp LS(PRCNT)          &kp LS(LPAR)  &kp LS(RPAR)  &kp LS(COLON)
&trans  &trans    &kp FSLH           &kp STAR    &kp SINGLE_QUOTE  &trans       &kp LS(TILDE)  &kp LS(DOUBLE_QUOTES)  &kp LS(LBRC)  &kp LS(RBRC)  &trans         &trans
                                     &trans      &trans            &trans       &trans         &trans                 &trans
            >;
        };

        num_layer {
            bindings = <
        &trans  &kp N7  &kp N8  &kp N9  &trans          &trans  &trans  &trans  &trans  &trans
        &trans  &kp N4  &kp N5  &kp N6  &trans          &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp N1  &kp N2  &kp N3  &trans          &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &kp NUMBER_0    &trans  &trans  &trans
            >;
        };
    };
};
